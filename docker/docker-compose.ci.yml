version: "3.8"

services:

  python:
    image: &image kwiliarty/glyphworks:main-dev
    stdin_open: true
    tty: true
    environment:
      - DJANGO_SETTINGS_MODULE=main.settings.ci
    ports:
      - "${GW_PYTHON_PORT}:8000"
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      &volumes
      - node_modules:/node_modules
      - yarn_cache:/yarn_cache
      - type: bind
        source: ./../
        target: /usr/src/app

  python-test:
    image: *image
    restart: always
    stdin_open: true
    tty: true
    environment:
      - TZ=America/New_York
      - GW_ENV=ci
      - GW_INSTANCE
      - DJANGO_SETTINGS_MODULE=main.settings.ci
      - CYPRESS_SERVER=True
      - SECRET_KEY
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '0:8000'
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    networks:
      - django
    volumes:
      *volumes
    depends_on:
      - db-test

  db-test:
    image: postgres:13.5-bullseye
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - django
    volumes:
      - postgres_test_data:/var/lib/postgresql/data

volumes:
  node_modules:
  yarn_cache:
  postgres_test_data:
